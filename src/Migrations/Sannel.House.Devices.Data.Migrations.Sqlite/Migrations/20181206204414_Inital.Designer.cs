// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sannel.House.Devices.Data;

namespace Sannel.House.Devices.Data.Migrations.Sqlite.Migrations
{
    [DbContext(typeof(DevicesDbContext))]
    [Migration("20181206204414_Inital")]
    partial class Inital
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687");

            modelBuilder.Entity("Sannel.House.Devices.Models.AlternateDeviceId", b =>
                {
                    b.Property<int>("AlternateId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateCreated");

                    b.Property<int>("DeviceId");

                    b.Property<long?>("MacAddress");

                    b.Property<Guid?>("Uuid");

                    b.HasKey("AlternateId");

                    b.HasIndex("DeviceId");

                    b.ToTable("AlternateDeviceIds");
                });

            modelBuilder.Entity("Sannel.House.Devices.Models.Device", b =>
                {
                    b.Property<int>("DeviceId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000);

                    b.Property<int>("DisplayOrder");

                    b.Property<bool>("IsReadOnly");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.HasKey("DeviceId");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("Sannel.House.Devices.Models.AlternateDeviceId", b =>
                {
                    b.HasOne("Sannel.House.Devices.Models.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
